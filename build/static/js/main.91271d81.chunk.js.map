{"version":3,"sources":["components/Square.js","components/Board.js","components/Game.js","winner.js","index.js"],"names":["Square","value","onClick","style","className","Board","squares","map","square","i","Game","useState","Array","fill","status","setstatus","stepNumber","setStepNumber","player","setplayer","winner","lines","length","a","b","c","checkWinner","symbol","statusPoint","slice","current","step","ReactDom","render","document","getElementById"],"mappings":"qNAYeA,EAVA,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QACjBC,EAAQF,EAAK,kBAAcA,GAAd,UAEnB,OACE,wBAAQG,UAAWD,EAAOD,QAASA,EAAnC,SACGD,KCIQI,EARD,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASJ,EAAZ,EAAYA,QAAZ,OACZ,qBAAKE,UAAU,QAAf,SACGE,EAAQC,KAAI,SAACC,EAAQC,GAAT,OACX,cAAC,EAAD,CAAgBR,MAAOO,EAAQN,QAAS,kBAAMA,EAAQO,KAAzCA,SC8CJC,EAhDF,WAAO,IAAD,EACSC,mBAAS,CAACC,MAAM,GAAGC,KAAK,QADjC,mBACZC,EADY,KACJC,EADI,OAEiBJ,mBAAS,GAF1B,mBAEZK,EAFY,KAEAC,EAFA,OAGSN,oBAAS,GAHlB,mBAGZO,EAHY,KAGJC,EAHI,KAIbC,ECRC,SAAqBd,GAWxB,IAVA,IAAMe,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAZ,EAAI,EAAGA,EAAIY,EAAMC,OAAQb,IAAK,CAAC,IAAD,cACnBY,EAAMZ,GADa,GAC9Bc,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAInB,EAAQiB,IAAMjB,EAAQiB,KAAOjB,EAAQkB,IAAMlB,EAAQiB,KAAOjB,EAAQmB,GACpE,OAAOnB,EAAQiB,GAGnB,OAAO,KDTIG,CAAYZ,EAAOE,IAC5BW,EAAST,EAAS,IAAM,IA6B9B,OACI,qCACJ,8CACA,cAAC,EAAD,CAAOZ,QAASQ,EAAOE,GAAad,QA9BhB,SAACO,GACjB,IAAMmB,EAAcd,EAAOe,MAAM,EAAGb,EAAa,GAC3Cc,EAAUF,EAAYZ,GACtBV,EAAO,YAAOwB,GAEhBV,GAAUd,EAAQG,KACtBH,EAAQG,GAAKkB,EACbZ,EAAU,GAAD,mBAAKa,GAAL,CAAkBtB,KAC3BW,EAAcW,EAAYN,QAC1BH,GAAWD,OAsBf,sBAAKd,UAAU,UAAf,UACQ,8BAVR,wBAAQF,QAAS,kBATbe,EADYc,EAUc,QAR1BZ,EAAUY,EAAO,IAAM,GAFZ,IAACA,GAUhB,SAHoB,cAgBZ,6BAAKX,EAAS,WAAaA,EAAS,SAAWO,WEzCvDK,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,W","file":"static/js/main.91271d81.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Square = ({ value, onClick }) => {\r\n  const style = value ? `squares ${value}` : `squares`;\r\n\r\n  return (\r\n    <button className={style} onClick={onClick}>\r\n      {value}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Square;","import React from \"react\";\r\nimport Square from \"./Square\";\r\n\r\nconst Board = ({ squares, onClick }) => (\r\n  <div className=\"board\">\r\n    {squares.map((square, i) => (\r\n      <Square key={i} value={square} onClick={() => onClick(i)} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport default Board;","import React, { useState } from \"react\";\r\nimport { checkWinner } from \"../winner\";\r\nimport Board from \"./Board\";\r\n\r\nconst Game = () => {\r\nconst [status, setstatus] = useState([Array(9).fill(null)]);\r\nconst [stepNumber, setStepNumber] = useState(0);\r\nconst [player, setplayer] = useState(true);\r\nconst winner = checkWinner(status[stepNumber]);\r\nconst symbol = player ? \"X\" : \"O\";\r\n\r\nconst handleClick = (i) => {\r\n    const statusPoint = status.slice(0, stepNumber + 1);\r\n    const current = statusPoint[stepNumber];\r\n    const squares = [...current];\r\n\r\n    if (winner || squares[i]) return;\r\n    squares[i] = symbol;\r\n    setstatus([...statusPoint, squares]);\r\n    setStepNumber(statusPoint.length);\r\n    setplayer(!player);\r\n};\r\n\r\nconst jumpTo = (step) => {\r\n    setStepNumber(step);\r\n    setplayer(step % 2 === 0);\r\n};\r\n\r\nconst reset = () =>\r\n    {\r\nconst destination = \"Restart\";\r\nreturn (\r\n        \r\n<button onClick={() => jumpTo(0)}>{destination}</button>\r\n        \r\n);\r\n    };\r\n\r\nreturn (\r\n    <>\r\n<h1>Tic Tac Toe </h1>\r\n<Board squares={status[stepNumber]} onClick={handleClick} />\r\n<div className=\"details\">\r\n        <div>\r\n{reset()}\r\n        </div>\r\n        <h2>{winner ? \"Winner: \" + winner : \"Turn: \" + symbol}</h2>\r\n</div>\r\n    </>\r\n);\r\n};\r\n\r\nexport default Game;","export function checkWinner(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6]\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return squares[a];\r\n      }\r\n    }\r\n    return null;\r\n  }","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport \"./index.css\";\nimport Game from \"./components/Game\";\n\nReactDom.render(<Game />, document.getElementById(\"root\"));"],"sourceRoot":""}